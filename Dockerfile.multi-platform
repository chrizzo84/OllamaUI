# Alternative Dockerfile mit Multi-Platform Support
FROM --platform=$BUILDPLATFORM node:20-bullseye-slim AS deps
WORKDIR /build

# Install build dependencies for native modules
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Copy package files
COPY ollama-ui/package.json ollama-ui/pnpm-lock.yaml ./ollama-ui/
WORKDIR /build/ollama-ui

# Install dependencies
RUN pnpm install --frozen-lockfile

# ---------- Build stage: compile Next.js app ----------
FROM deps AS builder
# Copy source
COPY ollama-ui .

# Force rebuild native modules for target platform
RUN pnpm rebuild better-sqlite3

# Build app
ENV NEXT_TELEMETRY_DISABLED=1
RUN pnpm build

# ---------- Runtime stage: base Ollama image + UI ----------
FROM ollama/ollama:latest AS final
WORKDIR /app

# Copy Node runtime from an official Node image (compatible glibc build)
COPY --from=node:20-bullseye-slim /usr/local/bin/node /usr/local/bin/node
COPY --from=node:20-bullseye-slim /usr/local/lib/node_modules /usr/local/lib/node_modules
RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm \
 && ln -s /usr/local/lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx || true

# Copy standalone build output
COPY --from=builder /build/ollama-ui/.next/standalone ./
COPY --from=builder /build/ollama-ui/.next/static ./.next/static
COPY --from=builder /build/ollama-ui/public ./public

# Environment variables
ENV OLLAMA_HOST="http://localhost:11434" \
    NODE_ENV=production \
    PORT=3000

# Start script
COPY <<'EOF' /app/start.sh
#!/usr/bin/env bash
set -euo pipefail

echo "[start] launching ollama server" >&2
ollama serve &
OLLAMA_PID=$!

sleep 2

if [ -f server.js ]; then
  echo "[start] launching Next.js UI on port ${PORT}" >&2
  exec node server.js
else
  echo "[error] server.js not found in /app. Did the build step succeed?" >&2
  kill ${OLLAMA_PID} || true
  exit 1
fi
EOF

RUN chmod +x /app/start.sh

EXPOSE 11434 3000

HEALTHCHECK --interval=30s --timeout=5s --retries=5 CMD bash -c 'exec 3<>/dev/tcp/127.0.0.1/3000 && echo -e "GET / HTTP/1.0\n\n" >&3 && grep -q "200" <(sleep 1; cat <&3)'

ENTRYPOINT ["/app/start.sh"]
